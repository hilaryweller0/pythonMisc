# This is a single line Python comment

myvar = 3
myvar += 2
myvar
""" This is a multiline
comment."""

mystring = "Hello"
mystring += " world."
print mystring

# This swaps the variables in one line! 
# It diesn't violate strong typing because values aren't
# actually neing assigned, but the objects are bound to
# the old naves

myvar, mystring = mystring, myvar

# Data types: lists, tuples and dictionaries
# Sets available in teh sets library
# lists: 1d arrags
# dictionaries: associative arrays
# tuples: immuyable 1d arrays
# types can be mixed within an array
# indexing from 0
# negative numbers count from the end so -1 is the
# last item

sample = [1, ["another", "list"], ("a", "tuple")]
mylist = ["List item 1", 2, 3.14]
mydict = {"Key 1": "Value 1", 2: 3, "pi": 3.14}
mydict["pi"]
mytuple = (1, 2, 3)
myfunction = len
print myfunction(mylist)

print mylist[:]
print mylist[0:2]
print mylist[-3:-1]
print mylist[1:]

# Strings
# inside single or double quotes
# multiline strings in triple quotes

print "Name: %s\
Number: %s\
String: %s" % ("hmm\n", 3, 3 * "-")

# Warning: watch out for trh trailing s in "%(key)s"
print "The %(verb)s a %(noun)s." %\
{"noun": "test", "verb": "is"}

# Flow control: if, for and while
rangelist = range(10)
print rangelist
for number in rangelist:
    # Chack if number is one of 
    # the numbers in the tuple.
    if number in (3, 4, 7, 9):
        # "Break" terminates a for without
        # executing the "else" clause.
        break
    else
        # "Continue" starts the next iteration
        # of the loop. It's rather uesless here
        # as its the last statemet of the loop
        continue

x = int(raw_input("Please enter an integer: "))
if x < 0:
     x = 0
     print 'Negative changed to zero'
elif x == 0:
     print 'Zero'
elif x == 1:
     print 'Single'
else:
     print 'More'

# Measure some strings:
a = ['cat', 'window', 'defenestrate']
for x in a:
    print x, len(x)

for x in a[:]: # make a slice copy of the entire list
    if len(x) > 6: a.insert(0, x)

a

range(-10, -100, -30)

a = ['Mary', 'had', 'a', 'little', 'lamb']
for i in range(len(a)):
    print i, a[i], len(a[i])

# break and continue Statements, and else Clauses on Loops

for n in range(2, 10):
    for x in range(2, n):
        if n % x == 0:
            print n, 'equals', x, '*', n/x
            break
    else:
        # loop fell through without finding a factor
        print n, 'is a prime number'

while True:
    pass  # Busy-wait for keyboard interrupt (Ctrl+C)

from numpy import matrix
from numpy import linalg
A = matrix( [[1,2,3],[11,12,13],[21,22,23]]) # Creates a matrix.
x = matrix( [[1],[2],[3]] )                  # Creates a matrix (like a column vector).
y = matrix( [[1,2,3]] )                      # Creates a matrix (like a row vector).
print A.T                                    # Transpose of A.
print A*x                                    # Matrix multiplication of A and x.
print A.I                                    # Inverse of A.
print linalg.solve(A, x)     # Solve the linear equation system.

from numpy import arange
arange(0.5, 5, 1.5)

x = np.matrix(numpy.arange(12).reshape((3,4))); x

